<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//Spring//DTD Bean//EN" 
    "http://www.springframework.org/dtd/spring-beans.dtd">

<!-- Application Context -->
<beans>

	<bean id="sc.propertiesHolder"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="ignoreResourceNotFound">
			<value>true</value>
		</property>
		<property name="placeholderPrefix" value="$SC{" />
		<property name="locations">
			<list>
				<value>classpath:com/telstra/olb/tegcbm/job/salmat/config/salmatclient-default.properties</value>
				<value>classpath:/salmatclient.properties</value>
			</list>
		</property>
	</bean>

	<bean id="cbmjac.salmatClient.manager" class="com.telstra.olb.tegcbm.job.core.DefaultManagerImpl">
		<property name="usage">
			<value><![CDATA[salmatClient]]></value>
		</property>
		<property name="jobs">
			<list>
				<ref bean="cbmjac.salmatClient.activity"/>
			</list>
		</property>
	</bean>

	<bean id="cbmjac.salmatClient.activity" class="com.telstra.olb.tegcbm.job.salmat.activity.SalmatClientActivity">
		<property name="name">
			<value>cbmjac.salmatClient.activity</value>
		</property>
		<property name="jmsTemplate">
			<ref local="externalJmsQueueTemplate"/>
		</property>	
		<property name="queueName">
			<value>$SC{salmat.billdownload.queue.name}</value>
		</property>			
		<property name="pollInterval">
			<value>$SC{salmat.queue.poll.interval}</value>
		</property>	
		<property name="nextActivity">
			<ref local="cbmjac.salmatAsynchronous.activity"/>
		</property>
	</bean>


	<bean id="cbmjac.salmatAsynchronous.activity" 
		class="com.telstra.olb.tegcbm.job.salmat.activity.SalmatAsynchronousActivity">
		<property name="name">
			<value>cbmjac.salmatAsynchronous.activity</value>
		</property>
		<property name="executorService">
			<ref bean="$CM{cbmjac.migrate.profile.executor}"/>
		</property>
		<property name="taskManager">
			<ref bean="cbmjac.task.manager"/>
		</property>
		<property name="activityDelegate">
			<ref local="cbmjac.salmatClient.delegate"/>
		</property>
		<property name="activityListeners">
			<list>
			</list>
		</property>
	</bean>

	<bean id="cbmjac.salmatClient.delegate" 
		class="com.telstra.olb.tegcbm.job.salmat.activity.SalmatClientActivityDelegate">
		<property name="jmsReceiver">
			<ref bean="jmsReceiver" />
		</property>		
	</bean>

	<!-- JNDI Environment Template -->
	<bean id="jndiTemplate"
		class="org.springframework.jndi.JndiTemplate">
		<property name="environment">
			<props>
				<prop key="java.naming.factory.initial">
					$SC{salmat.client.java.naming.factory.initial}
				</prop>
				<prop key="java.naming.provider.url">
					$SC{salmat.client.java.naming.provider.url}
				</prop>
			</props>
		</property>
	</bean>

	<!-- JMS Queue Connection Factory -->
	<bean id="externalJmsQueueConnectionFactory" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiTemplate">
			<ref bean="jndiTemplate" />
		</property>
		<property name="jndiName">
			<value>$SC{salmat.externalQCF.jndi.name}</value>
		</property>
	</bean>

	<bean id="completeJmsQueueConnectionFactory" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiTemplate">
			<ref bean="jndiTemplate" />
		</property>
		<property name="jndiName">
			<value>$SC{salmat.completeQCF.jndi.name}</value>
		</property>
	</bean>

	<!-- Spring JMS Queue Connection Factory -->
	<bean id="externalJmsQCF" class="org.springframework.jms.connection.SingleConnectionFactory102">
		<property name="targetConnectionFactory">
			<ref bean="externalJmsQueueConnectionFactory" />
		</property>
		<!-- property name="pubSubDomain">
			<value>false</value>
		</property-->
	</bean>

	<bean id="completeJmsQCF" class="org.springframework.jms.connection.SingleConnectionFactory102">
		<property name="targetConnectionFactory">
			<ref bean="completeJmsQueueConnectionFactory" />
		</property>
		<!-- property name="pubSubDomain">
			<value>false</value>
		</property-->
	</bean>


	<!-- JMS Destination Resolver -->
	<bean id="jmsDestinationResolver" class="org.springframework.jms.support.destination.JndiDestinationResolver">
		<property name="jndiTemplate">
			<ref bean="jndiTemplate" />
		</property>
		<property name="cache">
			<value>true</value>
		</property>
	</bean>

	<!-- JMS Queue Template -->
	<bean id="externalJmsQueueTemplate" class="org.springframework.jms.core.JmsTemplate102">
		<property name="connectionFactory">
			<ref bean="externalJmsQCF" />
		</property>
		<property name="destinationResolver">
			<ref bean="jmsDestinationResolver" />
		</property>
		<!-- property name="pubSubDomain">
			<value>false</value>
		</property-->
		<property name="receiveTimeout">
			<value>20000</value>
		</property>
	</bean>

	<bean id="completeJmsQueueTemplate" class="org.springframework.jms.core.JmsTemplate102">
		<property name="connectionFactory">
			<ref bean="completeJmsQCF" />
		</property>
		<property name="destinationResolver">
			<ref bean="jmsDestinationResolver" />
		</property>
		<!-- property name="pubSubDomain">
			<value>false</value>
		</property-->
		<property name="receiveTimeout">
			<value>20000</value>
		</property>
	</bean>

	<!-- Castor Marshaller to marshall Queue messages-->
	<bean id="billDownloadMarshaller" class="com.telstra.olb.xml.marshall.CastorXmlMarshaller">
		<property name="mapping">
			<value>com/telstra/olb/tegcbm/billdownload/mapping/BillDownloadContext-mapping.xml</value>
		</property>
		<property name="unmarshallClass">
			<value>com.telstra.olb.tegcbm.billdownload.jms.BillDownloadEventNotification</value>
		</property>
	</bean>

	<bean id="salmatStubMarshaller" class="com.telstra.olb.xml.marshall.CastorXmlMarshaller">
		<property name="mapping">
			<value>com/telstra/olb/tegcbm/job/salmat/config/SalmatPdfVO-Mapping.xml</value>
		</property>
		<property name="unmarshallClass">
			<value>com.telstra.olb.tegcbm.job.salmat.manager.SalmatPdfVOResponses</value>
		</property>
	</bean>

	<!-- JMS Receiver -->
	<bean id="jmsReceiver" class="com.telstra.olb.tegcbm.job.salmat.jms.SalmatMessageReceiver">
		<property name="jmsTemplate">
			<ref bean="externalJmsQueueTemplate" />
		</property>
		<property name="marshaller">
			<ref bean="billDownloadMarshaller" />
		</property>
		<property name="billDownloadManager">
			<ref bean="billDownloadManager" />
		</property>
		<property name="queueName">
			<value>$SC{salmat.billdownload.queue.name}</value>
		</property>
	</bean>

	<!-- JMS Sender -->
	<bean id="jmsSender" class="com.telstra.olb.tegcbm.job.salmat.jms.SalmatMessageSender">
		<property name="jmsTemplate">
			<ref bean="completeJmsQueueTemplate" />
		</property>
		<property name="marshaller">
			<ref bean="billDownloadMarshaller" />
		</property>
		<property name="queueName">
			<value>$SC{salmat.billdownloadcomplete.queue.name}</value>
		</property>
	</bean>

	<!-- BillDownloadManager - Manager bean that calls salmat -->
	
	<bean id="billDownloadManager" class="org.springframework.beans.factory.config.BeanReferenceFactoryBean">
		<property name="targetBeanName">
			<value>$SC{salmat.download.manager}</value>
		</property>
	</bean>

	<bean id="billDownloadManager.impl" class="com.telstra.olb.tegcbm.job.salmat.manager.BillDownloadManagerImpl">
		<property name="dao">
			<ref bean="salmatBillDownloadDao"/>
		</property>
		<property name="jmsSender">
			<ref bean="jmsSender" />
		</property>
		<property name="keyStore">
			<value>$SC{salmat.webservice.keyStore}</value>
		</property>
		<property name="keyStoreType">
			<value>$SC{salmat.webservice.keyStore.type}</value>
		</property>
		<property name="keyStorePassword">
			<value>$SC{salmat.webservice.keyStore.password}</value>
		</property>
		<property name="trustStore">
			<value>$SC{salmat.webservice.trustStore}</value>
		</property>
		<property name="trustStoreType">
			<value>$SC{salmat.webservice.trustStore.type}</value>
		</property>
		<property name="trustStorePassword">
			<value>$SC{salmat.webservice.trustStore.password}</value>
		</property>
		<property name="endpointAddress1">
			<value>$SC{salmat.webservice.endpoint.address.type1}</value>
		</property>
		<property name="endpointAddress2">
			<value>$SC{salmat.webservice.endpoint.address.type2}</value>
		</property>
		<property name="username">
			<value>$SC{salmat.webservice.username}</value>
		</property>
		<property name="password">
			<value>$SC{salmat.webservice.password}</value>
		</property>
		<property name="id">
			<value>$SC{salmat.webservice.id}</value>
		</property>
		<property name="pw">
			<value>$SC{salmat.webservice.pw}</value>
		</property>
		<property name="billsPath">
			<value>$SC{file.download.path}</value>
		</property>
	</bean>

	<bean id="billDownloadManager.stub" class="com.telstra.olb.tegcbm.job.salmat.manager.BillDownloadManagerStub">
		<property name="dao">
			<ref bean="salmatBillDownloadDao"/>
		</property>
		<property name="jmsSender">
			<ref bean="jmsSender" />
		</property>
		<property name="billsPath">
			<value>$SC{file.download.path}</value>
		</property>
		<property name="stubFilePath">
			<value>$SC{salmat.stub.file.path}</value>
		</property>
		<property name="marshaller">
			<ref bean="salmatStubMarshaller" />
		</property>
	</bean>

	<bean id="salmat.jdbc.DataSource" class="org.apache.commons.dbcp.BasicDataSource" abstract="true" destroy-method="close" depends-on="sc.propertiesHolder">
		<property name="driverClassName">
			<value>$SC{dataSource.basic.driver}</value>
		</property>
		<property name="initialSize">
    		<value>$SC{dataSource.pool.initialSize}</value>
  		</property>
  		<property name="maxActive">
    		<value>$SC{dataSource.pool.maxActive}</value>
  		</property>
  		<property name="maxIdle">
    		<value>$SC{dataSource.pool.maxIdle}</value>
  		</property>
  		<property name="minIdle">
    		<value>$SC{dataSource.pool.minIdle}</value>
  		</property>
  		<property name="maxWait">
    		<value>$SC{dataSource.pool.maxWait}</value>
  		</property>
  		<property name="removeAbandoned">
  			<value>$SC{dataSource.pool.removeAbandoned}</value>
  		</property>
  		<property name="removeAbandonedTimeout">
  			<value>$SC{dataSource.pool.removeAbandonedTimeout}</value>
  		</property>
  		<property name="logAbandoned">
  			<value>$SC{dataSource.pool.logAbandoned}</value>
  		</property>
	</bean>

	<bean id="salmat.edx.jdbc.DataSource" parent="salmat.jdbc.DataSource" lazy-init="true">
		<property name="url"><value>$SC{edx.dataSource.basic.url}</value></property>
		<property name="username"><value>$SC{edx.dataSource.basic.username}</value></property>
		<property name="password"><value>$SC{edx.dataSource.basic.password}</value></property>
	</bean>

	<bean id="hibernate.properties"
		class="org.springframework.beans.factory.config.PropertiesFactoryBean"
		lazy-init="true">
		<property name="properties">
			<props>
				<prop key="hibernate.dialect">
					$SC{hibernate.dialect}
				</prop>
				<prop key="hibernate.show_sql">
					$SC{hibernate.show_sql}
				</prop>
				<prop key="hibernate.cache.provider_class">
					$SC{hibernate.cache.provider_class}
				</prop>
				<prop
					key="hibernate.transaction.manager_lookup_class">
					$SC{hibernate.transaction.manager_lookup_class}
				</prop>
				<prop key="hibernate.jdbc.batch_size">
					$SC{hibernate.jdbc.batch_size}
				</prop>
				<prop key="hibernate.connection.release_mode">
					$SC{hibernate.connection.release_mode}
				</prop>
			</props>
		</property>
	</bean>

	<bean id="salmatSessionFactory"
		class="org.springframework.orm.hibernate.LocalSessionFactoryBean">
		<property name="dataSource" ref="salmat.edx.jdbc.DataSource" />
		<property name="useTransactionAwareDataSource" value="true" />
		<property name="mappingResources">
			<list>
				<value>
					com/telstra/olb/tegcbm/job/salmat/config/OLBBulkDownloadRequest.hbm.xml
				</value>
				<value>
					com/telstra/olb/tegcbm/job/salmat/config/OLBBulkDownloadRequestAccount.hbm.xml
				</value>
				<value>
					com/telstra/olb/tegcbm/job/salmat/config/OLBBillDownloadRequest.hbm.xml
				</value>
				<value>
					com/telstra/olb/tegcbm/job/salmat/config/OLBRequestStatus.hbm.xml
				</value>
				<value>
					com/telstra/olb/tegcbm/job/salmat/config/OLBBillDownloadTime.hbm.xml
				</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<ref bean="hibernate.properties" />
		</property>
	</bean>

	<bean id="salmat.transactionManager"
		class="org.springframework.orm.hibernate.HibernateTransactionManager">
		<property name="sessionFactory" ref="salmatSessionFactory" />
	</bean>

	<!-- bean id="salmatWebsphereTransactionFactory"
		class="org.springframework.transaction.jta.WebSphereTransactionManagerFactoryBean" />

	<bean id="salmatTransactionManager"
		class="org.springframework.transaction.jta.JtaTransactionManager">
		<property name="userTransactionName">
			<value>java:comp/UserTransaction</value>
		</property>
		<property name="transactionManager">
			<ref local="salmatWebsphereTransactionFactory" />
		</property>
	</bean>-->

	<bean id="sc.dao.transactionInterceptor"
		class="org.springframework.transaction.interceptor.TransactionInterceptor">
		<property name="transactionManager" ref="salmat.transactionManager" />
		<property name="transactionAttributeSource">
			<bean class="org.springframework.transaction.interceptor.NameMatchTransactionAttributeSource">
				<property name="properties">
					<props>
						<prop key="*">PROPAGATION_SUPPORTS,-Exception</prop>
					</props>
				</property>
			</bean>
		</property>
	</bean>

	<bean id="salmatBillDownloadDao"
		class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="interfaces">
			<list>
				<value>com.telstra.olb.tegcbm.billdownload.dao.BillDownloadDAO</value>
			</list>
		</property>
		<property name="target">
			<ref local="salmatBillDownloadDaoTarget" />
		</property>
		<property name="interceptorNames">
			<list>
				<value>sc.dao.transactionInterceptor</value>
			</list>
		</property>
	</bean>

	<bean id="salmatBillDownloadDaoTarget"
		class="com.telstra.olb.tegcbm.billdownload.dao.BillDownloadHibernateDAO">
		<property name="sessionFactory" ref="salmatSessionFactory" />
	</bean>

</beans>