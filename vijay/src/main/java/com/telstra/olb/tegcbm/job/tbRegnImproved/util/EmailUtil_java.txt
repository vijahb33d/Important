/*
 * Created on Aug 18, 2011
 *
 * TODO To change the template for this generated file go to
 * Window - Preferences - Java - Code Style - Code Templates
 */
package com.telstra.olb.tegcbm.job.tbRegnImproved.util;

import java.io.File;
import java.util.Iterator;
import java.util.List;
import java.util.Properties;

import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.Multipart;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeBodyPart;
import javax.mail.internet.MimeMessage;
import javax.mail.internet.MimeMultipart;
import javax.activation.DataHandler;
import javax.activation.FileDataSource;

import org.apache.commons.lang.StringUtils;




/**
 * @author ramesh.babu.athota
 *
 * TODO To change the template for this generated type comment go to
 * Window - Preferences - Java - Code Style - Code Templates
 */
public class EmailUtil {
	
	public static final String PROPERTY_SMTP_HOST = "mail.smtp.host";
	
	/**
	 *
	 * @param host
	 * @param from
	 * @param to A list of email address (of type String) to be to' ed. It must not be null.
	 * @param subject
	 * @return
	 * @throws MessagingException
	 */
	public static MimeMessage createMessage( String host, String from, List tos, String subject )
		throws MessagingException
	{
		// Get system properties
		Properties props = new Properties();

		// Setup mail server
		props.put( PROPERTY_SMTP_HOST, host);

		// Get session
		Session session = Session.getDefaultInstance(props, null);

		// Define message
		MimeMessage message = new MimeMessage(session);

		// Set the from address
		message.setFrom(new InternetAddress(from));

		// Set the to address
		if(tos.size() > 0) {
			Iterator iteTOs = tos.iterator();
			while(iteTOs.hasNext()) {
				message.addRecipient(Message.RecipientType.TO, new InternetAddress((String)iteTOs.next()));
			}
		}
		
		// Set the subject
		message.setSubject( subject );

		return message;
	}
	
	/**
	 * this method used to send an TB Reigistrations reports as an attachment to Telstra Business on daily.
	 * 
	 */
	
	public static boolean sendAttachmentMessage( String host, String from, List to, String msgText, String subject, String fileContent, File[] fileName )
		throws MessagingException
	{
		boolean flag=false;
		try
		{
			System.out.println("Host Name= "+host);
		MimeMessage message = createMessage( host, from, to, subject );
		
		// create and fill the first message part
		MimeBodyPart mbp1 = new MimeBodyPart();
		mbp1.setText(msgText);
	
		// create the second message part
		MimeBodyPart mbp2 = new MimeBodyPart();
	
		// attach the file to the message
		mbp2.setContent(fileContent, "text/html");
		//mbp2.setFileName(fileName);
		Multipart mp = new MimeMultipart();
		mp.addBodyPart(mbp1);
		
		for(int i=0;i<fileName.length;i++)
		{
		mbp2 = new MimeBodyPart();
		FileDataSource fds = new FileDataSource(fileName[i].getAbsoluteFile());
		mbp2.setDataHandler(new DataHandler(fds));
		mbp2.setFileName(fds.getName());
		mp.addBodyPart(mbp2);
		}
	
		// create the Multipart and its parts to it
		
		
	
		// add the Multipart to the message
		message.setContent(mp);
		
		// Send message
		Transport.send(message);
		}
		catch(Exception ex)
		{
			flag=true;
			throw new MessagingException(ex.getMessage());
		}
		return flag;
	}
	/**
	 * Utility method to validate if the email address is well form.
	 *
	 *  Validation rule:
	 * 	Email address contains @
	 * 	Email address contains .com
	 *
	 * @author Danny Tran
	 */
	public static boolean isEmailValid(String email) {

	    if (StringUtils.contains(email, "@") && (StringUtils.contains(email, ".co") || StringUtils.contains(email, ".net") || StringUtils.contains(email, ".org") || StringUtils.contains(email, ".gov") || StringUtils.contains(email, ".edu"))) {
	        return true;
	    }

	    return false;
	}

}
